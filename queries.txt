  SELECT    alias1 . `col_int_key` AS field1 , alias1 . `col_int_key` AS field2 , alias1 . `col_int_key` AS field3 , alias1 . `col_int_key` AS field4 , alias2 . `col_varchar_nokey` AS field5 FROM ( (  SELECT   SQ1_alias1 . * FROM ( C AS SQ1_alias1 INNER JOIN ( C AS SQ1_alias2 LEFT  JOIN C AS SQ1_alias3 ON (SQ1_alias3 . `pk` = SQ1_alias2 . `col_int_nokey`  ) ) ON (SQ1_alias3 . `col_varchar_key` = SQ1_alias2 . `col_varchar_nokey`  ) )  ) AS alias1 , (  SELECT   SQ2_alias1 . * FROM ( view_CC AS SQ2_alias1 LEFT  JOIN CC AS SQ2_alias2 ON (SQ2_alias2 . `col_varchar_key` = SQ2_alias1 . `col_varchar_key`  ) )  ) AS alias2 ) WHERE (  alias1 . `col_varchar_key` <= ANY ( SELECT 'j' UNION  SELECT 'c' ) ) AND ( alias1 . `pk` = alias2 . `col_int_key` AND alias1 . `col_int_key` = 80 )  HAVING field4 < 'y' ORDER BY CONCAT( alias2 . `col_varchar_nokey`, alias1 . `col_varchar_nokey` ) , CONCAT( alias2 . `col_varchar_nokey`, alias1 . `col_varchar_nokey` ) , CONCAT( alias1 . `col_varchar_key`, alias2 . `col_varchar_key` ) , alias1 . `col_varchar_key` , alias2 .`pk` ASC, field1, field2, field3, field4, field5;
  SELECT    alias1 . `col_int_key` AS field1 , alias1 . `col_int_key` AS field2 , alias1 . `col_int_key` AS field3 , alias1 . `col_int_key` AS field4 , alias2 . `col_varchar_nokey` AS field5 FROM ( (  SELECT   SQ1_alias1 . * FROM ( C AS SQ1_alias1 INNER JOIN ( C AS SQ1_alias2 LEFT  JOIN C AS SQ1_alias3 ON (SQ1_alias3 . `pk` = SQ1_alias2 . `col_int_nokey`  ) ) ON (SQ1_alias3 . `col_varchar_key` = SQ1_alias2 . `col_varchar_nokey`  ) )  ) AS alias1 , (  SELECT   SQ2_alias1 . * FROM ( view_CC AS SQ2_alias1 LEFT  JOIN CC AS SQ2_alias2 ON (SQ2_alias2 . `col_varchar_key` = SQ2_alias1 . `col_varchar_key`  ) )  ) AS alias2 ) WHERE (  alias1 . `col_varchar_key` <= ANY ( SELECT 'j' UNION  SELECT 'c' ) ) AND ( alias1 . `pk` = alias2 . `col_int_key` AND alias1 . `col_int_key` = 80 )  HAVING field4 < 'y' ORDER BY CONCAT( alias2 . `col_varchar_nokey`, alias1 . `col_varchar_nokey` ) , CONCAT( alias2 . `col_varchar_nokey`, alias1 . `col_varchar_nokey` ) , CONCAT( alias1 . `col_varchar_key`, alias2 . `col_varchar_key` ) , alias1 . `col_varchar_key` , alias2 .`pk` ASC, field1, field2, field3, field4, field5 ;
  SELECT    MIN(  alias2 . `col_int_key` ) AS field1 FROM ( (  SELECT   SQ1_alias2 . * FROM ( CC AS SQ1_alias1 INNER JOIN CC AS SQ1_alias2 ON (SQ1_alias2 . `col_varchar_key` = SQ1_alias1 . `col_varchar_nokey`  ) ) WHERE ( SQ1_alias2 . `pk` = SQ1_alias2 . `pk` AND SQ1_alias2 . `col_varchar_nokey` > 'x' ) ) AS alias1 , CC AS alias2 ) WHERE (   EXISTS ( SELECT   SQ2_alias1 . `col_varchar_nokey` AS SQ2_field1 FROM ( CC AS SQ2_alias1 RIGHT  JOIN C AS SQ2_alias2 ON (SQ2_alias2 . `col_varchar_key` = SQ2_alias1 . `col_varchar_key`  ) ) WHERE SQ2_alias1 . `col_varchar_nokey` = alias1 . `col_varchar_nokey` OR SQ2_alias2 . `col_varchar_key` < alias2 . `col_varchar_key` ) ) AND ( alias1 . `col_int_key` = 126 AND alias1 . `col_varchar_key` = 'h' )  HAVING  ( 3, 3 )  IN ( SELECT   SQ3_alias1 . `col_int_key` AS SQ3_field1 , SQ3_alias1 . `col_int_nokey` AS SQ3_field2 FROM C AS SQ3_alias1 WHERE ( SQ3_alias1 . `col_varchar_key` <= SQ3_alias1 . `col_varchar_nokey` AND  SQ3_alias1 . `col_varchar_nokey` = ALL ( SELECT 8 UNION ALL SELECT 2 ) )   ) 
  SELECT    MIN(  alias2 . `col_int_key` ) AS field1 FROM ( (  SELECT   SQ1_alias2 . * FROM ( CC AS SQ1_alias1 INNER JOIN CC AS SQ1_alias2 ON (SQ1_alias2 . `col_varchar_key` = SQ1_alias1 . `col_varchar_nokey`  ) ) WHERE ( SQ1_alias2 . `pk` = SQ1_alias2 . `pk` AND SQ1_alias2 . `col_varchar_nokey` > 'x' ) ) AS alias1 , CC AS alias2 ) WHERE (   EXISTS ( SELECT   SQ2_alias1 . `col_varchar_nokey` AS SQ2_field1 FROM ( CC AS SQ2_alias1 RIGHT  JOIN C AS SQ2_alias2 ON (SQ2_alias2 . `col_varchar_key` = SQ2_alias1 . `col_varchar_key`  ) ) WHERE SQ2_alias1 . `col_varchar_nokey` = alias1 . `col_varchar_nokey` OR SQ2_alias2 . `col_varchar_key` < alias2 . `col_varchar_key` ) ) AND ( alias1 . `col_int_key` = 126 AND alias1 . `col_varchar_key` = 'h' )  HAVING  ( 3, 3 )  IN ( SELECT   SQ3_alias1 . `col_int_key` AS SQ3_field1 , SQ3_alias1 . `col_int_nokey` AS SQ3_field2 FROM C AS SQ3_alias1 WHERE ( SQ3_alias1 . `col_varchar_key` <= SQ3_alias1 . `col_varchar_nokey` AND  SQ3_alias1 . `col_varchar_nokey` = ALL ( SELECT 8 UNION ALL SELECT 2 ) )   ) ;
  SELECT    alias1 . `col_int_key` AS field1 , alias1 . `col_varchar_key` AS field2 , alias2 . `col_int_key` AS field3 FROM ( CC AS alias1 , C AS alias2 , (  SELECT DISTINCT  SQ1_alias1 . * FROM ( C AS SQ1_alias1 LEFT OUTER JOIN C AS SQ1_alias2 ON (SQ1_alias2 . `pk` = SQ1_alias1 . `col_int_key`  ) )  ) AS alias3 ) WHERE (   EXISTS ( SELECT   SQ2_alias2 . `col_varchar_nokey` AS SQ2_field1 FROM ( C AS SQ2_alias1 RIGHT OUTER JOIN C AS SQ2_alias2 ON (SQ2_alias2 . `col_varchar_key` = SQ2_alias1 . `col_varchar_key`  ) ) WHERE SQ2_alias2 . `col_varchar_key` != alias2 . `col_varchar_nokey` OR SQ2_alias2 . `pk` <> alias1 . `pk` ) ) AND ( alias1 . `col_int_nokey` <> alias2 . `col_int_nokey` OR alias1 . `col_int_key` IS  NULL )  GROUP BY field1, field2, field3  ORDER BY alias1 . `col_varchar_key` ASC , field1, field2, field3 
  SELECT    alias1 . `col_int_key` AS field1 , alias1 . `col_varchar_key` AS field2 , alias2 . `col_int_key` AS field3 FROM ( CC AS alias1 , C AS alias2 , (  SELECT DISTINCT  SQ1_alias1 . * FROM ( C AS SQ1_alias1 LEFT OUTER JOIN C AS SQ1_alias2 ON (SQ1_alias2 . `pk` = SQ1_alias1 . `col_int_key`  ) )  ) AS alias3 ) WHERE (   EXISTS ( SELECT   SQ2_alias2 . `col_varchar_nokey` AS SQ2_field1 FROM ( C AS SQ2_alias1 RIGHT OUTER JOIN C AS SQ2_alias2 ON (SQ2_alias2 . `col_varchar_key` = SQ2_alias1 . `col_varchar_key`  ) ) WHERE SQ2_alias2 . `col_varchar_key` != alias2 . `col_varchar_nokey` OR SQ2_alias2 . `pk` <> alias1 . `pk` ) ) AND ( alias1 . `col_int_nokey` <> alias2 . `col_int_nokey` OR alias1 . `col_int_key` IS  NULL )  GROUP BY field1, field2, field3  ORDER BY alias1 . `col_varchar_key` ASC , field1, field2, field3 ;
  SELECT    alias1 . `col_int_key` AS field1 , alias1 . `col_varchar_key` AS field2 FROM ( C AS alias1 INNER JOIN ( ( C AS alias2 INNER JOIN (  SELECT   SQ1_alias1 . * FROM C AS SQ1_alias1  ) AS alias3 ON (alias3 . `col_int_key` = alias2 . `pk`  ) ) ) ON (alias3 . `pk` = alias2 . `col_int_key`  ) ) WHERE (  ( 1, 6 )  IN ( SELECT 1 , 7 UNION  SELECT 5, 2 ) ) OR ( alias1 . `col_int_key` > 209 AND alias1 . `col_int_key` < ( 209 + 214 ) OR alias1 . `col_int_key` > 209 AND alias1 . `col_int_key` < ( 209 + 60 ) ) AND alias1 . `col_varchar_nokey` IS NOT NULL  GROUP BY field1, field2 HAVING (field1 >= 'USA' OR field1 > 2) 
  SELECT    alias1 . `col_int_key` AS field1 , alias1 . `col_varchar_key` AS field2 FROM ( C AS alias1 INNER JOIN ( ( C AS alias2 INNER JOIN (  SELECT   SQ1_alias1 . * FROM C AS SQ1_alias1  ) AS alias3 ON (alias3 . `col_int_key` = alias2 . `pk`  ) ) ) ON (alias3 . `pk` = alias2 . `col_int_key`  ) ) WHERE (  ( 1, 6 )  IN ( SELECT 1 , 7 UNION  SELECT 5, 2 ) ) OR ( alias1 . `col_int_key` > 209 AND alias1 . `col_int_key` < ( 209 + 214 ) OR alias1 . `col_int_key` > 209 AND alias1 . `col_int_key` < ( 209 + 60 ) ) AND alias1 . `col_varchar_nokey` IS NOT NULL  GROUP BY field1, field2 HAVING (field1 >= 'USA' OR field1 > 2) ;
  SELECT    alias2 . `col_int_key` AS field1 FROM ( (  SELECT   SQ1_alias1 . * FROM ( CC AS SQ1_alias1 INNER JOIN view_CC AS SQ1_alias2 ON (SQ1_alias2 . `pk` = SQ1_alias1 . `pk`  ) ) WHERE ( SQ1_alias1 . `col_int_nokey` >= 2 OR SQ1_alias1 . `col_varchar_key` <> SQ1_alias2 . `col_varchar_key` ) ) AS alias1 INNER JOIN ( ( C AS alias2 RIGHT  JOIN BB AS alias3 ON (alias3 . `col_varchar_key` = alias2 . `col_varchar_key`  ) ) ) ON (alias3 . `col_int_key` = alias2 . `col_int_key`  ) ) WHERE (  alias2 . `col_int_key`  IN ( SELECT DISTINCT  SQ2_alias1 . `col_int_key` AS SQ2_field1 FROM ( C AS SQ2_alias1 , C AS SQ2_alias2 ) WHERE SQ2_alias1 . `col_int_key` != alias2 . `col_int_key` OR SQ2_alias2 . `col_int_key` <= 2 ) ) AND ( alias3 . `col_varchar_nokey` = alias1 . `col_varchar_nokey` OR alias3 . `col_varchar_key` != alias2 . `col_varchar_nokey` )  GROUP BY field1  
  SELECT    alias2 . `col_int_key` AS field1 FROM ( (  SELECT   SQ1_alias1 . * FROM ( CC AS SQ1_alias1 INNER JOIN view_CC AS SQ1_alias2 ON (SQ1_alias2 . `pk` = SQ1_alias1 . `pk`  ) ) WHERE ( SQ1_alias1 . `col_int_nokey` >= 2 OR SQ1_alias1 . `col_varchar_key` <> SQ1_alias2 . `col_varchar_key` ) ) AS alias1 INNER JOIN ( ( C AS alias2 RIGHT  JOIN BB AS alias3 ON (alias3 . `col_varchar_key` = alias2 . `col_varchar_key`  ) ) ) ON (alias3 . `col_int_key` = alias2 . `col_int_key`  ) ) WHERE (  alias2 . `col_int_key`  IN ( SELECT DISTINCT  SQ2_alias1 . `col_int_key` AS SQ2_field1 FROM ( C AS SQ2_alias1 , C AS SQ2_alias2 ) WHERE SQ2_alias1 . `col_int_key` != alias2 . `col_int_key` OR SQ2_alias2 . `col_int_key` <= 2 ) ) AND ( alias3 . `col_varchar_nokey` = alias1 . `col_varchar_nokey` OR alias3 . `col_varchar_key` != alias2 . `col_varchar_nokey` )  GROUP BY field1  ;
  SELECT     ( SELECT 'w' FROM DUAL ) AS field1 FROM ( (  SELECT   SQ2_alias1 . * FROM C AS SQ2_alias1  ) AS alias1 , CC AS alias2 , CC AS alias3 ) WHERE (  alias1 . `col_varchar_nokey`  IN ( SELECT 'y' UNION  SELECT 'z' ) ) AND alias1 . `col_varchar_key` = alias2 . `col_varchar_key` AND ( alias1 . `col_int_nokey` IS  NULL AND alias1 . `col_varchar_nokey` != 'u' )  GROUP BY field1  ORDER BY alias1 . `col_varchar_key` DESC , field1 LIMIT 1
  SELECT     ( SELECT 'w' FROM DUAL ) AS field1 FROM ( (  SELECT   SQ2_alias1 . * FROM C AS SQ2_alias1  ) AS alias1 , CC AS alias2 , CC AS alias3 ) WHERE (  alias1 . `col_varchar_nokey`  IN ( SELECT 'y' UNION  SELECT 'z' ) ) AND alias1 . `col_varchar_key` = alias2 . `col_varchar_key` AND ( alias1 . `col_int_nokey` IS  NULL AND alias1 . `col_varchar_nokey` != 'u' )  GROUP BY field1  ORDER BY alias1 . `col_varchar_key` DESC , field1 LIMIT 1;
  SELECT DISTINCT   alias1 . `col_varchar_nokey` AS field1 FROM ( CC AS alias1 , CC AS alias2 ) WHERE   EXISTS ( ( SELECT DISTINCT  SQ1_alias2 . `col_varchar_nokey` AS SQ1_field1 FROM ( CC AS SQ1_alias1 , C AS SQ1_alias2 ) WHERE ( SQ1_alias1 . `col_varchar_key` <> 'f' OR  NOT EXISTS ( SELECT DISTINCT  C_SQ1_alias1 . `col_varchar_nokey` AS C_SQ1_field1 FROM ( CC AS C_SQ1_alias1 INNER JOIN ( ( C AS C_SQ1_alias2 STRAIGHT_JOIN A AS C_SQ1_alias3 ON (C_SQ1_alias3 . `col_varchar_key` = C_SQ1_alias2 . `col_varchar_key` ) ) ) ON (C_SQ1_alias3 . `pk` = C_SQ1_alias2 . `col_int_nokey` ) ) WHERE C_SQ1_alias1 . `pk` <> SQ1_alias1 . `pk` ) )  ) )  GROUP BY field1  
  SELECT DISTINCT   alias1 . `col_varchar_nokey` AS field1 FROM ( CC AS alias1 , CC AS alias2 ) WHERE   EXISTS ( ( SELECT DISTINCT  SQ1_alias2 . `col_varchar_nokey` AS SQ1_field1 FROM ( CC AS SQ1_alias1 , C AS SQ1_alias2 ) WHERE ( SQ1_alias1 . `col_varchar_key` <> 'f' OR  NOT EXISTS ( SELECT DISTINCT  C_SQ1_alias1 . `col_varchar_nokey` AS C_SQ1_field1 FROM ( CC AS C_SQ1_alias1 INNER JOIN ( ( C AS C_SQ1_alias2 STRAIGHT_JOIN A AS C_SQ1_alias3 ON (C_SQ1_alias3 . `col_varchar_key` = C_SQ1_alias2 . `col_varchar_key` ) ) ) ON (C_SQ1_alias3 . `pk` = C_SQ1_alias2 . `col_int_nokey` ) ) WHERE C_SQ1_alias1 . `pk` <> SQ1_alias1 . `pk` ) )  ) )  GROUP BY field1  ;
  SELECT    alias1 . `col_varchar_key` AS field1 , alias1 . `col_varchar_key` AS field2 , alias1 . `col_int_key` AS field3 , alias1 . `col_varchar_key` AS field4 , alias1 . `col_int_key` AS field5 , alias1 . `col_int_key` AS field6 , alias1 . `col_varchar_nokey` AS field7 , alias1 . `col_varchar_key` AS field8 , alias2 . `col_int_key` AS field9 FROM ( CC AS alias1 RIGHT  JOIN ( ( C AS alias2 LEFT  JOIN CC AS alias3 ON (alias3 . `col_varchar_key` = alias2 . `col_varchar_key`  ) ) ) ON (alias3 . `col_varchar_key` = alias2 . `col_varchar_nokey`  ) ) WHERE (  alias3 . `col_int_nokey` NOT IN ( SELECT 2 UNION ALL SELECT 9 ) ) AND ( alias1 . `pk` = 61 AND alias1 . `col_varchar_key` LIKE CONCAT( 'n' , '%') )   ORDER BY alias1 . `col_int_key` ASC , field1, field2, field3, field4, field5, field6, field7, field8, field9 
  SELECT    alias1 . `col_varchar_key` AS field1 , alias1 . `col_varchar_key` AS field2 , alias1 . `col_int_key` AS field3 , alias1 . `col_varchar_key` AS field4 , alias1 . `col_int_key` AS field5 , alias1 . `col_int_key` AS field6 , alias1 . `col_varchar_nokey` AS field7 , alias1 . `col_varchar_key` AS field8 , alias2 . `col_int_key` AS field9 FROM ( CC AS alias1 RIGHT  JOIN ( ( C AS alias2 LEFT  JOIN CC AS alias3 ON (alias3 . `col_varchar_key` = alias2 . `col_varchar_key`  ) ) ) ON (alias3 . `col_varchar_key` = alias2 . `col_varchar_nokey`  ) ) WHERE (  alias3 . `col_int_nokey` NOT IN ( SELECT 2 UNION ALL SELECT 9 ) ) AND ( alias1 . `pk` = 61 AND alias1 . `col_varchar_key` LIKE CONCAT( 'n' , '%') )   ORDER BY alias1 . `col_int_key` ASC , field1, field2, field3, field4, field5, field6, field7, field8, field9 ;
  SELECT    alias2 . `col_int_key` AS field1 , alias1 . `col_varchar_key` AS field2 , alias1 . `col_int_key` AS field3 FROM ( BB AS alias1 INNER JOIN ( ( B AS alias2 STRAIGHT_JOIN CC AS alias3 ON (alias3 . `col_varchar_key` = alias2 . `col_varchar_nokey`  ) ) ) ON (alias3 . `col_varchar_nokey` = alias2 . `col_varchar_key`  ) ) WHERE  ( SELECT 'b' FROM DUAL ) IS  NULL  GROUP BY field1, field2, field3 HAVING field1 > 'v' 
  SELECT    alias2 . `col_int_key` AS field1 , alias1 . `col_varchar_key` AS field2 , alias1 . `col_int_key` AS field3 FROM ( BB AS alias1 INNER JOIN ( ( B AS alias2 STRAIGHT_JOIN CC AS alias3 ON (alias3 . `col_varchar_key` = alias2 . `col_varchar_nokey`  ) ) ) ON (alias3 . `col_varchar_nokey` = alias2 . `col_varchar_key`  ) ) WHERE  ( SELECT 'b' FROM DUAL ) IS  NULL  GROUP BY field1, field2, field3 HAVING field1 > 'v' ;
  SELECT    alias1 . `col_int_key` AS field1 , alias2 . `col_varchar_nokey` AS field2 , alias1 . `col_int_key` AS field3 , alias1 . `col_varchar_key` AS field4 , alias2 . `col_varchar_key` AS field5 , alias2 . `col_varchar_key` AS field6 FROM ( (  SELECT   SQ1_alias1 . * FROM ( BB AS SQ1_alias1 LEFT  JOIN ( C AS SQ1_alias2 LEFT  JOIN CC AS SQ1_alias3 ON (SQ1_alias3 . `col_varchar_nokey` = SQ1_alias2 . `col_varchar_key`  AND ( 's', 'm' ) NOT IN ( SELECT   C_SQ1_alias2 . `col_varchar_key` AS C_SQ1_field1 , C_SQ1_alias1 . `col_varchar_key` AS C_SQ1_field2 FROM ( B AS C_SQ1_alias1 INNER JOIN C AS C_SQ1_alias2 ON (C_SQ1_alias2 . `col_int_key` = C_SQ1_alias1 . `col_int_key` ) )  GROUP BY C_SQ1_field1 , C_SQ1_field2  ) ) ) ON (SQ1_alias3 . `col_varchar_key` = SQ1_alias2 . `col_varchar_key`  ) )  ) AS alias1 INNER JOIN BB AS alias2 ON (alias2 . `col_varchar_nokey` = alias1 . `col_varchar_key`  ) ) WHERE (   EXISTS ( ( SELECT  SQL_SMALL_RESULT SQ2_alias1 . `col_varchar_nokey` AS SQ2_field1 FROM ( view_B AS SQ2_alias1 INNER JOIN C AS SQ2_alias2 ON (SQ2_alias2 . `col_int_nokey` = SQ2_alias1 . `col_int_key`  ) )  GROUP BY SQ2_field1 ) ) ) OR alias1 . `col_int_key` = 70 AND (  ( 'n', 'h' )  IN ( SELECT   SQ3_alias1 . `col_varchar_nokey` AS SQ3_field1 , MAX(  SQ3_alias1 . `col_varchar_key` ) AS SQ3_field2 FROM ( C AS SQ3_alias1 RIGHT OUTER JOIN A AS SQ3_alias2 ON (SQ3_alias2 . `pk` = SQ3_alias1 . `col_int_key`  ) ) WHERE ( SQ3_alias1 . `col_varchar_nokey` <> SQ3_alias2 . `col_varchar_key` AND SQ3_alias2 . `col_int_key` >= 6 )  HAVING (((SQ3_alias1 . `col_int_nokey` <= 'e' AND SQ3_alias1 . `pk` >= 'h') OR SQ3_alias2 . `col_int_key` <> 7) OR SQ3_alias2 . `pk` >= 6) ) AND alias1 . `col_varchar_key` != 'j' )  GROUP BY field1, field2, field3, field4, field5, field6 HAVING (field3 <= 'x' OR field3 >= 'm') ORDER BY alias1 . `col_varchar_key` DESC , field1, field2, field3, field4, field5, field6 LIMIT 1000 OFFSET 4
  SELECT    alias1 . `col_int_key` AS field1 , alias2 . `col_varchar_nokey` AS field2 , alias1 . `col_int_key` AS field3 , alias1 . `col_varchar_key` AS field4 , alias2 . `col_varchar_key` AS field5 , alias2 . `col_varchar_key` AS field6 FROM ( (  SELECT   SQ1_alias1 . * FROM ( BB AS SQ1_alias1 LEFT  JOIN ( C AS SQ1_alias2 LEFT  JOIN CC AS SQ1_alias3 ON (SQ1_alias3 . `col_varchar_nokey` = SQ1_alias2 . `col_varchar_key`  AND ( 's', 'm' ) NOT IN ( SELECT   C_SQ1_alias2 . `col_varchar_key` AS C_SQ1_field1 , C_SQ1_alias1 . `col_varchar_key` AS C_SQ1_field2 FROM ( B AS C_SQ1_alias1 INNER JOIN C AS C_SQ1_alias2 ON (C_SQ1_alias2 . `col_int_key` = C_SQ1_alias1 . `col_int_key` ) )  GROUP BY C_SQ1_field1 , C_SQ1_field2  ) ) ) ON (SQ1_alias3 . `col_varchar_key` = SQ1_alias2 . `col_varchar_key`  ) )  ) AS alias1 INNER JOIN BB AS alias2 ON (alias2 . `col_varchar_nokey` = alias1 . `col_varchar_key`  ) ) WHERE (   EXISTS ( ( SELECT  SQL_SMALL_RESULT SQ2_alias1 . `col_varchar_nokey` AS SQ2_field1 FROM ( view_B AS SQ2_alias1 INNER JOIN C AS SQ2_alias2 ON (SQ2_alias2 . `col_int_nokey` = SQ2_alias1 . `col_int_key`  ) )  GROUP BY SQ2_field1 ) ) ) OR alias1 . `col_int_key` = 70 AND (  ( 'n', 'h' )  IN ( SELECT   SQ3_alias1 . `col_varchar_nokey` AS SQ3_field1 , MAX(  SQ3_alias1 . `col_varchar_key` ) AS SQ3_field2 FROM ( C AS SQ3_alias1 RIGHT OUTER JOIN A AS SQ3_alias2 ON (SQ3_alias2 . `pk` = SQ3_alias1 . `col_int_key`  ) ) WHERE ( SQ3_alias1 . `col_varchar_nokey` <> SQ3_alias2 . `col_varchar_key` AND SQ3_alias2 . `col_int_key` >= 6 )  HAVING (((SQ3_alias1 . `col_int_nokey` <= 'e' AND SQ3_alias1 . `pk` >= 'h') OR SQ3_alias2 . `col_int_key` <> 7) OR SQ3_alias2 . `pk` >= 6) ) AND alias1 . `col_varchar_key` != 'j' )  GROUP BY field1, field2, field3, field4, field5, field6 HAVING (field3 <= 'x' OR field3 >= 'm') ORDER BY alias1 . `col_varchar_key` DESC , field1, field2, field3, field4, field5, field6 LIMIT 1000 OFFSET 4;